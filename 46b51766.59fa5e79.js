(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{111:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||b[d]||o;return n?a.a.createElement(f,i(i({ref:t},p),{},{components:n})):a.a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var p=2;p<o;p++)c[p]=n[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(3),a=(n(0),n(111));const o={id:"pbcycle",title:"Lifecycle (Flow) of a PB Cycle"},c={unversionedId:"pbcycle",id:"pbcycle",isDocsHomePage:!1,title:"Lifecycle (Flow) of a PB Cycle",description:"The PBCycle object represents an instance of Participatory Budgeting cycle for a given organisation, like a School or School Group.",source:"@site/docs/pbcycle.md",slug:"/pbcycle",permalink:"/core-docs-bootstrap/docs/pbcycle",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/pbcycle.md",version:"current",sidebar:"sidebar",previous:{title:"GraphQL Playground / Voyager / GraphiQL",permalink:"/core-docs-bootstrap/docs/explorer"},next:{title:"Participant Invitation",permalink:"/core-docs-bootstrap/docs/user-inv"}},i=[{value:"createPbCycle",id:"createpbcycle",children:[]}],l={toc:i};function p({components:e,...t}){return Object(a.b)("wrapper",Object(r.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The PBCycle object represents an instance of Participatory Budgeting cycle for a given organisation, like a School or School Group. "),Object(a.b)("p",null,"Every PBCycle guides you through the process of"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Planning the coming cycle,"),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",{parentName:"li",href:"#ideation"},"Collecting ideas from the participants and creating proposals"),","),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",{parentName:"li",href:"refinement"},"Refining")," the proposals,"),Object(a.b)("li",{parentName:"ol"},"The ",Object(a.b)("a",{parentName:"li",href:"voting"},"Voting phase")," followed by ",Object(a.b)("a",{parentName:"li",href:"ratification"},"the voting result ratification phase"),","),Object(a.b)("li",{parentName:"ol"},"and ends with the implementation of the winning proposal(s).")),Object(a.b)("h3",{id:"createpbcycle"},"createPbCycle"),Object(a.b)("p",null,"Using this mutation creates a valid object, which can later be edited:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},'def create_pb_cycle(theme, description, budget, startDate, endDate):\n  client = GraphqlClient(endpoint=gql_endpoint)\n\n  query = \'\'\'\n  mutation($theme: String!, $description: String, $budget: Int!, $startDate: datetime.datetime.now().isoformat(), $endDate: Int!){\n        createPbCycle(input: {\n            theme: $theme,\n            description: $description,\n            budget: $budget,\n            startDate: $startDate,\n            endDate: $endDate,\n        }){\n            pbCycleId\n        }\n    }\'\'\'\n  variables = {"theme": theme, "description": description, "budget": budget, "startDate": startDate, "endDate": endDate}\n  headers = {"Authorization":"Bearer "+ admin_user_token}\n  data = client.execute(query=query, variables=variables, headers=headers)\n  #print(data)\n  return data\n')))}p.isMDXComponent=!0}}]);