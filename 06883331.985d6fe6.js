(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{286:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),l=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(n),b=r,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||a;return n?o.a.createElement(m,c(c({ref:t},s),{},{components:n})):o.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"Tag",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),a=(n(0),n(286)),i={id:"signed-proposal-photo-url",title:"signedProposalPhotoUrl"},c={unversionedId:"api/queries/signed-proposal-photo-url",id:"api/queries/signed-proposal-photo-url",isDocsHomePage:!1,title:"signedProposalPhotoUrl",description:"<span",source:"@site/docs/api/queries/signed-proposal-photo-url.mdx",slug:"/api/queries/signed-proposal-photo-url",permalink:"/core-docs-bootstrap/docs/api/queries/signed-proposal-photo-url",version:"current",sidebar:"Schema",previous:{title:"proposalsReacted",permalink:"/core-docs-bootstrap/docs/api/queries/proposals-reacted"},next:{title:"statistics",permalink:"/core-docs-bootstrap/docs/api/queries/statistics"}},p=[{value:"Arguments",id:"arguments",children:[]},{value:"Type",id:"type",children:[]}],s=function(e){var t=e.children,n=e.color;return Object(a.b)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},l={toc:p,Tag:s};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Get a signed URL to upload a new photo"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-graphql"},"signedProposalPhotoUrl(\n  objectId: String\n  imageType: ImageEnumTypes!\n  objectType: ObjectEnumTypes!\n): SignedUrlResponse\n\n")),Object(a.b)("h3",{id:"arguments"},"Arguments"),Object(a.b)("h4",{id:"objectid-string"},Object(a.b)("inlineCode",{parentName:"h4"},"objectId")," (",Object(a.b)("a",{parentName:"h4",href:"/docs/api/scalars/string"},Object(a.b)("inlineCode",{parentName:"a"},"String")),")"),Object(a.b)("p",null,"Object uuid. This field is optional and only needed when you want to add a new image\nto an existing object. This ID could correspond to a proposal, comment, PBCycle or\nother type according to object_type field."),Object(a.b)("h4",{id:"imagetype-imageenumtypes"},Object(a.b)("inlineCode",{parentName:"h4"},"imageType")," (",Object(a.b)("a",{parentName:"h4",href:"/docs/api/enums/image-enum-types"},Object(a.b)("inlineCode",{parentName:"a"},"ImageEnumTypes!")),")"),Object(a.b)("p",null,"Image type to upload. In the future this field can change to cover other scenarios."),Object(a.b)("h4",{id:"objecttype-objectenumtypes"},Object(a.b)("inlineCode",{parentName:"h4"},"objectType")," (",Object(a.b)("a",{parentName:"h4",href:"/docs/api/enums/object-enum-types"},Object(a.b)("inlineCode",{parentName:"a"},"ObjectEnumTypes!")),")"),Object(a.b)("p",null,"Type of object to which the image will assigned."),Object(a.b)("h3",{id:"type"},"Type"),Object(a.b)("h4",{id:"signedurlresponse"},Object(a.b)("a",{parentName:"h4",href:"/docs/api/objects/signed-url-response"},Object(a.b)("inlineCode",{parentName:"a"},"SignedUrlResponse"))))}u.isMDXComponent=!0}}]);