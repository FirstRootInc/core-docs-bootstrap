(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{105:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(i,".").concat(u)]||d[u]||b[u]||o;return n?r.a.createElement(m,c(c({ref:t},s),{},{components:n})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(3),r=(n(0),n(105));const o={id:"pbcycle",title:"PB Cycle"},i={unversionedId:"pbcycle",id:"pbcycle",isDocsHomePage:!1,title:"PB Cycle",description:"In this section we describe a Participatory Budgeting Cycle on an object-level. For more information about what a PB Cycle is, visite our website, which includes many great ressources.",source:"@site/docs/pbcycle.md",slug:"/pbcycle",permalink:"/core-docs-bootstrap/pbcycle",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/pbcycle.md",version:"current",sidebar:"sidebar",previous:{title:"Public Schema",permalink:"/core-docs-bootstrap/references"},next:{title:"PB Invite",permalink:"/core-docs-bootstrap/pb-inv"}},c=[{value:"createPbCycle",id:"createpbcycle",children:[]},{value:"Proposals",id:"proposals",children:[]},{value:"Ballots",id:"ballots",children:[]}],l={toc:c};function s({components:e,...t}){return Object(r.b)("wrapper",Object(a.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"In this section we describe a Participatory Budgeting Cycle on an object-level. For more information about what a PB Cycle is, visite ",Object(r.b)("a",{parentName:"p",href:"https://firstroot.co/teacher-resources/"},"our website"),", which includes many great ressources."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"PBCycle")," object represents an instance of a Participatory Budgeting Cycle for any given  organization like a school, a class, or a group of people that wants to make a budgetary choice collaboratively. Every PBCycle follows this flow/process:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Planning")," - Administrators define a theme, budget, categories and schedule"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Ideation")," - Participants submit, edit and share their proposals"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Refinement")," - Administrators and leaders hand-pick the best proposals"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Voting")," - Participants vote, and admins do a voting results ratification process"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Implementation")," - Based on voting results, winning proposals get done!")),Object(r.b)("p",null,"Here is an example on how to use the corresponding mutation:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'from datetime import datetime, timezone, timedelta\n\ndef create_phase(name, pb_cycle_id, from_date, to_date):\n  # Possible names: "PLANNING","IDEATION","REFINEMENT","VOTING","VOTING_RESULTS_RATIFICATION","FUNDING","IMPLEMENTATION"\n  if (from_date == None):\n    from_date = datetime.now(timezone.utc)\n  if (to_date == None):\n    to_date = from_date + timedelta(days=21)\n  if (pb_cycle_id == None):\n    raise Exception("No pb_cycle_id was given")\n\n  client = GraphqlClient(endpoint=gql_endpoint)\n\n  query = \'\'\' \n    mutation CreatePhase($pbCycleId: ID!, $name: PhasesEnum!, $startAt: ISO8601DateTime!, $endAt: ISO8601DateTime ){\n      createPhase(input: {\n        pbCycleId: $pbCycleId,\n        name: $name,\n        startAt: $startAt,\n        endAt: $endAt\n      }) {\n        pbCycleId\n        phaseId\n      }\n    }\n  \'\'\'  \n  variables = {"pbCycleId": pb_cycle_id, "name": name, "startAt": from_date.isoformat(), "endAt": to_date.isoformat()}\n  headers = {"Authorization":"Bearer "+admin_user_token}\n  data = client.execute(query=query, variables=variables, headers=headers)\n  #print(data)\n  return data\n\n')),Object(r.b)("h3",{id:"createpbcycle"},"createPbCycle"),Object(r.b)("p",null,"By using this mutation a valid object is created; Which can later be edited."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'from datetime import datetime, timezone, timedelta\n\ndef create_pb_cycle(theme, description, budget, startDate=None, endDate):\n  client = GraphqlClient(endpoint=gql_endpoint)\n\n  if (startDate == None):\n    startDate = datetime.now(timezone.utc)\n\n  query = \'\'\'\n    mutation($theme: String!, $description: String, $budget: Int!, $startDate: dISO8601DateTime!, $endDate: ISO8601DateTime!){\n        createPbCycle(input: {\n            theme: $theme,\n            description: $description,\n            budget: $budget,\n            startDate: $startDate,\n            endDate: $endDate,\n        }){\n            pbCycleId\n        }\n      }\'\'\'\n  variables = {"theme": theme, "description": description, "budget": budget, "startDate": startDate.isoformat(), "endDate": endDate.isoformat()}\n  headers = {"Authorization":"Bearer "+ admin_user_token}\n  data = client.execute(query=query, variables=variables, headers=headers)\n  #print(data)\n  return data\n')),Object(r.b)("h3",{id:"proposals"},"Proposals"),Object(r.b)("p",null,"A Proposal object is an entity that represents a specific idea of a participant which is categorized within a PBCycle."),Object(r.b)("p",null,"Using the ",Object(r.b)("inlineCode",{parentName:"p"},"createProposal")," a participant can submmit a proposal within a category, which can later if selcted be voted on during the voting phase.\nIf the category doesn't existes use the ",Object(r.b)("inlineCode",{parentName:"p"},"createCategory")," mutation."),Object(r.b)("h3",{id:"ballots"},"Ballots"),Object(r.b)("p",null,"PB cycle participants vote on eligible proposals contained on a Ballot. A Ballot is the collection of Proposals that are ready for voting. A BallotSubmission is the 'vote' of a Party. "),Object(r.b)("p",null,"The Ballot is prepared during the refinement Phase. All Proposals on the Ballot must have at least a name, a cost and a category. Once voting begins the proposals on the ballot, the ballot itself, and the PB Cycle budget cannot be edited anymore."))}s.isMDXComponent=!0}}]);